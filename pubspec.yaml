name: fiatpe_payments_sdk
description: "The All-in-One FiatPe Payment Gateway Flutter library is a robust solution designed to simplify digital payment acceptance in your Flutter applications. This library supports multiple payment methods, enabling seamless transactions for users through a single integration."
version: 1.0.1
homepage: https://github.com/fiatpe/fiatpe_payments_sdk.git

environment:
  sdk: '>=3.4.1 <4.0.0'
  flutter: '>=3.3.0'

dependencies:
  flutter:
    sdk: flutter
  plugin_platform_interface: ^2.0.2

  dio: ^5.3.0
  pretty_dio_logger: ^1.1.1
  bloc: ^8.1.0
  flutter_bloc: ^8.1.1
  logger: ^1.1.0
  get_it: ^7.2.0
  # Allows value based equality for our classes e.g Eat() == Eat() is true
  equatable: ^2.0.5
  # Generates code for us by providing annotations we can use
  injectable: ^2.0.1
  # Allows converting json to dart class and back
  json_annotation: ^4.9.0
  # Networking Libraries
  retrofit: ">=4.0.0 <5.0.0"
  built_value: ^8.4.2
  rxdart: ^0.27.7
  crypto: ^3.0.2
  lottie: ^3.1.2
  freezed_annotation:
  stream_transform: ^2.1.0
  auto_size_text: ^3.0.0
  fluttertoast: ^8.1.1
  uuid: ^4.5.1
  qr_flutter: ^4.1.0
  intl: ^0.19.0
#  flutter_fgbg: ^0.6.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^3.0.0

  # injectable generator to your dev_dependencies
  injectable_generator: ^2.0.1
  # networking generators
  retrofit_generator: ">=5.0.0 <6.0.0"
  built_value_generator: ^8.4.2
  # add build runner if not already added
  build_runner: ">=2.3.0 <4.0.0"
  json_serializable: ^6.5.4
  freezed:
  envied_generator: ^0.5.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.fiatpe.fiatpe_payments_sdk
        pluginClass: FiatpePaymentsSdkPlugin
      ios:
        pluginClass: FiatpePaymentsSdkPlugin

  # To add assets to your plugin package, add an assets section, like this:
  assets:
    - assets/images/
    - assets/anim/
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages
